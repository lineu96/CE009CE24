library(devtools)
install.packages("devtools")
# Do GitLab.
url <- "https://gitlab.c3sl.ufpr.br/pet-estatistica/labestData.git"
install_git(url = url, branch = "master")
library(devtools)
# Do GitLab.
url <- "https://gitlab.c3sl.ufpr.br/pet-estatistica/labestData.git"
install_git(url = url, branch = "master")
labestDataView()
library(labestData)
labestDataView()
PaulaEx4.6.5
head(PaulaEx4.6.5)
help(PaulaEx4.6.5)
PaulaEx4.6.5
PaulaEx4.6.5[sample(1:100, 10)]
PaulaEx4.6.5[sample(1:100, 10),]
teste <- PaulaEx4.6.5[sample(1:100, 10),]
set.seed(1)
teste <- PaulaEx4.6.5[sample(1:100, 10),]
knitr::opts_chunk$set(echo = TRUE, eval = F)
library(labestData)
set.seed(1)
dados <- PaulaEx4.6.5
set.seed(1)
names(dados)
dados <- dados[sample(1:nrow(dados), 10),c(1,2,3,4)]
row.names(dados) <- NULL
names(dados) <- c("Quedas", "Intervenção", "Sexo", "Equilíbrio")
names(dados) <- c("Quedas", "Intervenção", "Sexo", "Equilíbrio")
knitr::kable(dados)
knitr::kable(dados)
dados$Equilíbrio <- dados$Equilíbrio/10
knitr::kable(dados)
knitr::kable(dados)
tabela <- as.data.frame(table(dados$Sexo))
tabela$Freq_r <- prop.table(table(dados$Sexo))
names(tabela) <- c("Turma", "Frequência", "Frequência relativa")
knitr::kable(tabela)
breaks <- hist(dados$Equilíbrio, plot = F)$breaks
faixas <- cut(dados$Equilíbrio,
breaks = breaks,
include.lowest = T,
right = F)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
names(tabela) <- c("Nota", "Frequência", "Frequência relativa")
knitr::kable(tabela)
knitr::kable(tabela)
hist(dados$Equilíbrio, plot = F)$breaks
breaks <- seq(0,10,2)
breaks
faixas <- cut(dados$Equilíbrio,
breaks = breaks,
include.lowest = T,
right = F)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
names(tabela) <- c("Nota", "Frequência", "Frequência relativa")
knitr::kable(tabela)
knitr::kable(tabela)
dados
rownames(df) <- c("Quedas", "Equilíbrio")
df <- data.frame(CV = c(paste0(round((sd(dados$Quedas)/mean(dados$Quedas))*100, 2), "%"),
paste0(round((sd(dados$Equilíbrio)/mean(dados$Equilíbrio))*100,2), "%"))
)
rownames(df) <- c("Quedas", "Equilíbrio")
knitr::kable(df)
freq <- tabela$Frequência
names(freq) <- tabela$Nota
barplot(freq,
space = 0,
xlab = "Peso",
ylab = "Frequência",
main = "",
col = 0)
aiq = fivenum(dados$Equilíbrio)[4] - fivenum(dados$Equilíbrio)[2]
bp <- c(NA,fivenum(dados$Equilíbrio)[2:4],NA)
bp[1] <- bp[2] - (1.5*aiq)
bp[5] <- bp[4] + (1.5*aiq)
names(bp) <- c("Q1 - 1.5AIQ",
"Q1", "Q2", "Q3",
"Q3 + 1.5AIQ")
tabela <- c(min(dados$Equilíbrio), bp, max(dados$Equilíbrio))
names(tabela)[1] <- "Mínimo"
names(tabela)[7] <- "Máximo"
knitr::kable(t(tabela))
boxplot(dados$Altura, xaxt = "n", col = 0, horizontal=T)
aiq = fivenum(dados$Equilíbrio)[4] - fivenum(dados$Equilíbrio)[2]
bp <- c(NA,fivenum(dados$Equilíbrio)[2:4],NA)
bp[1] <- bp[2] - (1.5*aiq)
bp[5] <- bp[4] + (1.5*aiq)
names(bp) <- c("Q1 - 1.5AIQ",
"Q1", "Q2", "Q3",
"Q3 + 1.5AIQ")
tabela <- c(min(dados$Equilíbrio), bp, max(dados$Equilíbrio))
names(tabela)[1] <- "Mínimo"
names(tabela)[7] <- "Máximo"
knitr::kable(t(tabela))
boxplot(dados$Altura, xaxt = "n", col = 0, horizontal=T)
aiq = fivenum(dados$Equilíbrio)[4] - fivenum(dados$Equilíbrio)[2]
bp <- c(NA,fivenum(dados$Equilíbrio)[2:4],NA)
bp[1] <- bp[2] - (1.5*aiq)
bp[5] <- bp[4] + (1.5*aiq)
names(bp) <- c("Q1 - 1.5AIQ",
"Q1", "Q2", "Q3",
"Q3 + 1.5AIQ")
tabela <- c(min(dados$Equilíbrio), bp, max(dados$Equilíbrio))
names(tabela)[1] <- "Mínimo"
names(tabela)[7] <- "Máximo"
knitr::kable(t(tabela))
boxplot(dados$Altura, xaxt = "n", col = 0, horizontal=T)
aiq = fivenum(dados$Equilíbrio)[4] - fivenum(dados$Equilíbrio)[2]
bp <- c(NA,fivenum(dados$Equilíbrio)[2:4],NA)
bp[1] <- bp[2] - (1.5*aiq)
bp[5] <- bp[4] + (1.5*aiq)
names(bp) <- c("Q1 - 1.5AIQ",
"Q1", "Q2", "Q3",
"Q3 + 1.5AIQ")
tabela <- c(min(dados$Equilíbrio), bp, max(dados$Equilíbrio))
names(tabela)[1] <- "Mínimo"
names(tabela)[7] <- "Máximo"
knitr::kable(t(tabela))
boxplot(dados$Altura, xaxt = "n", col = 0, horizontal=T)
boxplot(dados$Equilíbrio, xaxt = "n", col = 0, horizontal=T)
boxplot(dados$Equilíbrio, xaxt = "n", col = 0, horizontal=T)
axis(1,
at=tabela[c(1, 3,4,5,7)],
labels = T)
knitr::kable(table(dados$Sexo,
dados$Intervenção))
knitr::kable(table(dados$Sexo,
dados$Intervenção))
boxplot(dados$Quedas~dados$Sexo, ylab = "Quedas", xlab = "Sexo", col = 0)
plot(dados$Equilíbrio~dados$Quedas, ylab = "Peso", xlab = "Altura", pch = 19)
dados$Equilíbrio~dados$Quedas
cor(dados$Equilíbrio~dados$Quedas)
dados$Quedas
dados$Equilíbrio
cor(dados$Equilíbrio, dados$Quedas)
round(cor(dados$Equilíbrio, dados$Quedas))
round(cor(dados$Equilíbrio, dados$Quedas),2)
Quedas <- c(mean(dados$Quedas), var(dados$Quedas), sd(dados$Altura))
Quedas <- c(mean(dados$Quedas), var(dados$Quedas), sd(dados$Quedas))
names(Quedas) <- c("Média", "Variância", "Desvio padrão")
df <- as.data.frame(Quedas)
Quedas <- c(mean(dados$Quedas), var(dados$Quedas), sd(dados$Quedas))
names(Quedas) <- c("Média", "Variância", "Desvio padrão")
df <- as.data.frame(Quedas)
df$Nota <- c(mean(dados$Equilíbrio), var(dados$Equilíbrio), sd(dados$Equilíbrio))
knitr::kable(t(round(df, 2)))
knitr::kable(t(round(df, 2)))
knitr::kable(table(dados$Sexo,
dados$Intervenção))
knitr::kable(table(dados$Sexo,
dados$Intervenção))
library(labestData)
dados <- PaulaEx4.6.5
set.seed(4)
dados <- dados[sample(1:nrow(dados), 10),c(1,2,3,4)]
row.names(dados) <- NULL
names(dados) <- c("Quedas", "Intervenção", "Sexo", "Equilíbrio")
dados$Equilíbrio <- dados$Equilíbrio/10
knitr::kable(dados)
knitr::kable(table(dados$Sexo,
dados$Intervenção))knitr::kable(table(dados$Sexo,
knitr::kable(table(dados$Sexo,
dados$Intervenção))
1.73^2
sqrt(0.39)
52+18
rmarkdown::render_site()
setwd("~/CE009CS24")
rmarkdown::render_site()
getwd()
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE, eval = T)
library(labestData)
dados <- PaulaEx4.6.5
set.seed(4)
dados <- dados[sample(1:nrow(dados), 10),c(1,2,3,4)]
row.names(dados) <- NULL
names(dados) <- c("Quedas", "Intervenção", "Sexo", "Equilíbrio")
dados$Equilíbrio <- dados$Equilíbrio/10
(6-mean(dados$Quedas))/sd(dados$Quedas)
df <- data.frame(Z = c(round(6-mean(dados$Quedas))/sd(dados$Quedas),2),
(7.5-mean(dados$Equilíbrio))/sd(dados$Equilíbrio)
)
df <- data.frame(Z = c(round(6-mean(dados$Quedas))/sd(dados$Quedas),2),
(7.5-mean(dados$Equilíbrio))/sd(dados$Equilíbrio)
)
rownames(df) <- c("Quedas", "Equilíbrio")
knitr::kable(df)
df <- data.frame(Z = c(6-mean(dados$Quedas))/sd(dados$Quedas),
(7.5-mean(dados$Equilíbrio))/sd(dados$Equilíbrio)
)
rownames(df) <- c("Quedas", "Equilíbrio")
knitr::kable(df)
```{r, echo=FALSE}
df <- data.frame(Z = c(6-mean(dados$Quedas))/sd(dados$Quedas),
(7.5-mean(dados$Equilíbrio))/sd(dados$Equilíbrio)
)
rownames(df) <- c("Quedas", "Equilíbrio")
data.frame(Z = c(6-mean(dados$Quedas))/sd(dados$Quedas),
(7.5-mean(dados$Equilíbrio))/sd(dados$Equilíbrio)
)
c(6-mean(dados$Quedas))/sd(dados$Quedas),
df <- data.frame(Z = c((6-mean(dados$Quedas))/sd(dados$Quedas),
(7.5-mean(dados$Equilíbrio))/sd(dados$Equilíbrio))
)
rownames(df) <- c("Quedas", "Equilíbrio")
knitr::kable(df)
df <- data.frame(Z = c(round((6-mean(dados$Quedas))/sd(dados$Quedas),2),
round((7.5-mean(dados$Equilíbrio))/sd(dados$Equilíbrio)),2)
)
rownames(df) <- c("Quedas", "Equilíbrio")
```{r, echo=FALSE}
df <- data.frame(Z = c(round((6-mean(dados$Quedas))/sd(dados$Quedas),2),
(7.5-mean(dados$Equilíbrio))/sd(dados$Equilíbrio))
)
rownames(df) <- c("Quedas", "Equilíbrio")
knitr::kable(df)
df <- data.frame(Z = c(round((6-mean(dados$Quedas))/sd(dados$Quedas),2),
round((7.5-mean(dados$Equilíbrio))/sd(dados$Equilíbrio),2))
)
rownames(df) <- c("Quedas", "Equilíbrio")
knitr::kable(df)
df <- data.frame(r = round(cor(dados$Equilíbrio, dados$Quedas),2))
knitr::kable(df)
knitr::opts_chunk$set(echo = TRUE, eval = T)
dados <- read.csv2("estudantes.csv", header = T, dec = '.')
set.seed(1)
dados <- dados[sample(1:nrow(dados), 10),c(2,3,5,6)]
row.names(dados) <- NULL
names(dados) <- c("Turma", "Sexo", "Altura", "Peso")
dados$Altura <- dados$Altura*100
dados$Peso <- round(dados$Peso)
df <- data.frame(Z = c(round((185-mean(dados$Altura))/sd(dados$Altura),2),
round((81-mean(dados$Peso))/sd(dados$Peso),2))
)
rownames(df) <- c("Altura", "Peso")
knitr::kable(df)
tabela <- table(dados$Turma, dados$Sexo)
teste <- chisq.test(tabela)
knitr::kable(teste$observed, caption = "Valores observados.")
knitr::kable(teste$expected, caption = "Valores esperados.")
Q = sum((teste$observed-teste$expected)^2/teste$expected)
names(Q) = ''
resp <- data.frame("Q"= round(Q,  2))
names(resp) <- 'Q = '
knitr::kable(t(resp))
setwd("~/CE009CS24")
rmarkdown::render_site()
library(shiny); runApp('~/sipad-dashboard/new-app/new-app.R')
y = rnorm(100)
x = rnorm(100)
plot(y~x)
lm(y~x)
abline(lm(y~x), col = 2)
y = rnorm(100)
x = rnorm(100)
plot(y~x)
lm(y~x)
abline(lm(y~x), col = 2)
fechamento = rnorm(1000)
y = rnorm(1000)
y = rnorm(1000) #resposta
x1 = rnorm(1000) #exp 1
x2 = rnorm(1000) #exp 2
x2 = rnorm(1000) #exp 3
mod <- lm(y~x1+x2+x3)
x3 = rnorm(1000) #exp 3
mod <- lm(y~x1+x2+x3)
summary(mod)
perfil = data.frame(x1=1,
x2=1,
x3=1)
predict(mod, perfil)
predict(mod, perfil)
plot(mod, 1:4)
rmarkdown::render_site()
setwd("~/CE009CE24")
rmarkdown::render_site()
library(shiny); runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
?plotly::save_image(grafico_serie_napne(), file)
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
paste("plot-", Sys.Date(), ".png", sep=""),
paste("plot-", Sys.Date(), ".png", sep="")
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
install.packages("webshot2")
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
runApp('~/sipad-dashboard/new-app/new-app.R')
rmarkdown::render_site()
notas <- readxl::read_xls('notas-chamada.xls')
notas$`PROVA 1` <- as.numeric(notas$`PROVA 1`)
notas$`PROVA 2` <- as.numeric(notas$`PROVA 2`)
notas$`PROVA 3` <- as.numeric(notas$`PROVA 3`)
notas$`REMOTA 1` <- as.numeric(notas$`REMOTA 1`)
notas$`REMOTA 2` <- as.numeric(notas$`REMOTA 2`)
notas$`REMOTA 3` <- as.numeric(notas$`REMOTA 3`)
notas$`REMOTA 4` <- as.numeric(notas$`REMOTA 4`)
notas$`REMOTA 5` <- as.numeric(notas$`REMOTA 5`)
notas$`MÉDIA REMOTAS` <- rowSums(notas[,c('REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'REMOTA 5')]) /5
soma_parciais <- rowSums(notas[,c('PROVA 1',
'PROVA 2',
'PROVA 3',
'MÉDIA REMOTAS')],
na.rm = T)
pre_exame <- round((soma_parciais)/4, 1)
notas$`NOTAS PRÉ EXAME` <- pre_exame
notas$`SITUAÇÃO PRÉ EXAME` <-
ifelse(notas$`NOTAS PRÉ EXAME` >= 7,
"APROVADO",
ifelse(notas$`NOTAS PRÉ EXAME` < 4,
"REPROVADO",
"EXAME"))
notas$`NOTAS FINAIS` <-
ifelse(notas$`SITUAÇÃO PRÉ EXAME` == 'EXAME',
ifelse(is.na(notas$EXAME),
notas$`NOTAS PRÉ EXAME`/2,
round((notas$`NOTAS PRÉ EXAME`+ notas$EXAME)/2, 2)),
notas$`NOTAS PRÉ EXAME`)
notas$`SITUAÇÃO FINAL` <-
ifelse(notas$`NOTAS FINAIS` >= 5,
"APROVADO",
"REPROVADO")
notas[,c('NOME',
'GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
#'PROVA 4',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4'#,
#'TRABALHO 1',
#'TRABALHO 2',
"NOTAS PRÉ EXAME",
notas[,c('NOME',
'GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
#'PROVA 4',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
#'TRABALHO 1',
#'TRABALHO 2',
"NOTAS PRÉ EXAME",
"SITUAÇÃO PRÉ EXAME"
#"EXAME",
#"NOTAS FINAIS",
#"SITUAÇÃO FINAL"
)]
View(notas[,c('NOME',
'GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
#'PROVA 4',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
#'TRABALHO 1',
#'TRABALHO 2',
"NOTAS PRÉ EXAME",
"SITUAÇÃO PRÉ EXAME"
#"EXAME",
#"NOTAS FINAIS",
#"SITUAÇÃO FINAL"
)])
pre_exame
pre_exame*1.1
87*1.1
notas[,c('NOME',
"NOTAS PRÉ EXAME",
'FALTAS',
)]
notas[,c('NOME',
"NOTAS PRÉ EXAME",
'FALTAS'
)]
View(notas[,c('NOME',
"NOTAS PRÉ EXAME",
'FALTAS'
)])
---
title: "Introdução à Estatística"
0.6*6421.26
basico=4500
quali=2300
alim=1000
(basico+quali+alim)*0.75
(basico+quali+alim)*0.77
(basico+quali+alim)*0.78
(basico+quali+alim)*0.77
cd=0.6*6421.26
cd
(basico+quali+alim+cd)*0.77
